@{
    ViewData["Title"] = "E-posta Şablonları Yönetimi";
}
<div class="card mb-5">
    <div class="card-body">
        <div class="d-flex flex-wrap flex-stack">
            <div class="d-flex flex-column justify-content-center flex-wrap me-3">
                <h1 class="page-heading d-flex text-dark fw-bold fs-3 flex-column justify-content-center my-0">E-posta
                    Şablonları</h1>
                <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1">
                    <li class="breadcrumb-item text-muted"><a asp-area="Admin" asp-controller="Home" asp-action="Index"
                            class="text-muted text-hover-primary">Anasayfa</a></li>
                    <li class="breadcrumb-item"><span class="bullet bg-gray-400 w-5px h-2px"></span></li>
                    <li class="breadcrumb-item text-muted">Sistem Ayarları</li>
                    <li class="breadcrumb-item"><span class="bullet bg-gray-400 w-5px h-2px"></span></li>
                    <li class="breadcrumb-item text-dark">E-posta Şablonları</li>
                </ul>
            </div>
        </div>
    </div>
</div>
<div class="card">
    <div class="card-header border-0 pt-6">
        <div class="card-title">
            <div class="d-flex align-items-center position-relative my-1">
                <i class="ki-duotone ki-magnifier fs-3 position-absolute ms-5"><span class="path1"></span><span
                        class="path2"></span></i>
                <input type="text" id="datatable_search_input" class="form-control form-control-solid w-250px ps-14"
                    placeholder="Şablonlarda Ara" />
            </div>
        </div>
    </div>
    <div class="card-body py-4">
        @Html.AntiForgeryToken()
        <table id="email_templates_table" class="table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4"
            data-get-url="@Url.Action("GetData", "EmailTemplate", new { area = "Admin" })">
            <thead>
                <tr class="fw-bold text-muted">
                    <th class="min-w-200px">Şablon Adı</th>
                    <th class="min-w-200px">Sistem Adı</th>
                    <th class="min-w-250px">Konu</th>
                    <th class="min-w-150px">Gönderici Hesap</th>
                    <th class="min-w-100px">Durum</th>
                    <th class="min-w-100px text-end">İşlemler</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        KTUtil.onDOMContentLoaded(function () {
            MetronicDataTables.init({
                table: '#email_templates_table',
                search: {
                    input: '#datatable_search_input'
                },
                columns: [
                    { "data": "name", "name": "Name" },
                    { "data": "systemName", "name": "SystemName" },
                    { "data": "subject", "name": "Subject" },
                    { "data": "emailAccountName", "name": "EmailAccount.DisplayName" },
                    { "data": "isActive", "name": "IsActive" },
                    { "data": null, "name": "Actions", "orderable": false, "searchable": false }
                ],
                columnDefs: [
                    {
                        targets: 4,
                        render: function (data, type, row) {
                            return data ? `<div class="badge badge-light-success fw-bold">Aktif</div>` : `<div class="badge badge-light-danger fw-bold">Pasif</div>`;
                        }
                    },
                    {
                        targets: -1, className: 'text-end',
                        render: function (data, type, row) {
                            let toggleButtonColor = row.isActive ? 'btn-light-danger' : 'btn-light-success';
                            let toggleButtonTitle = row.isActive ? 'Pasif Hale Getir' : 'Aktif Hale Getir';
                            let toggleButtonIcon = row.isActive ? 'ki-cross-circle' : 'ki-check-circle';

                            return `
                                <a href="/Admin/EmailTemplate/Edit/${row.id}" class="btn btn-icon btn-sm btn-light-primary me-1" title="Düzenle"><i class="ki-duotone ki-pencil fs-3"><span class="path1"></span><span class="path2"></span></i></a>
                                <a href="#" class="btn btn-icon btn-sm ${toggleButtonColor}" data-kt-toggle-action="true" data-id="${row.id}" data-display-name="${row.name}" data-is-active="${row.isActive}" title="${toggleButtonTitle}">
                                    <i class="ki-duotone ${toggleButtonIcon} fs-3"><span class="path1"></span><span class="path2"></span></i>
                                </a>
                            `;
                        }
                    }
                ],
                action: {
                    selector: '[data-kt-toggle-action="true"]',
                    url: '@Url.Action("ToggleIsActive", "EmailTemplate")',
                    confirmButtonText: "Evet, Değiştir!",
                    confirmButtonClass: "btn-warning",
                    confirmationTextGenerator: function (link) {
                        const displayName = link.getAttribute('data-display-name');
                        const isActive = link.getAttribute('data-is-active') === 'true';
                        const actionText = isActive ? 'pasif hale getirmek' : 'aktif hale getirmek';
                        return `'${displayName}' şablonunu ${actionText} istediğinizden emin misiniz?`;
                    }
                }
            });
        });
    </script>
}